#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace nilnul._finance_._LINQ_.journal.entry.sum._l2s_
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="my")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertJournal(Journal instance);
    partial void UpdateJournal(Journal instance);
    partial void DeleteJournal(Journal instance);
    partial void InsertEntry(Entry instance);
    partial void UpdateEntry(Entry instance);
    partial void DeleteEntry(Entry instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::nilnul._finance_._LINQ_.Properties.Settings.Default.myConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Journal> Journals
		{
			get
			{
				return this.GetTable<Journal>();
			}
		}
		
		public System.Data.Linq.Table<Entry> Entries
		{
			get
			{
				return this.GetTable<Entry>();
			}
		}
		
		public System.Data.Linq.Table<Sum> Sums
		{
			get
			{
				return this.GetTable<Sum>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="[nilnul.finance].Journal")]
	public partial class Journal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private System.Nullable<System.DateTime> _when;
		
		private string _description;
		
		private System.Nullable<System.DateTime> @__time;
		
		private string @__memo;
		
		private EntitySet<Entry> _Entries;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnwhenChanging(System.Nullable<System.DateTime> value);
    partial void OnwhenChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void On_timeChanging(System.Nullable<System.DateTime> value);
    partial void On_timeChanged();
    partial void On_memoChanging(string value);
    partial void On_memoChanged();
    #endregion
		
		public Journal()
		{
			this._Entries = new EntitySet<Entry>(new Action<Entry>(this.attach_Entries), new Action<Entry>(this.detach_Entries));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[when]", Storage="_when", DbType="DateTime", IsDbGenerated=true)]
		public System.Nullable<System.DateTime> when
		{
			get
			{
				return this._when;
			}
			set
			{
				if ((this._when != value))
				{
					this.OnwhenChanging(value);
					this.SendPropertyChanging();
					this._when = value;
					this.SendPropertyChanged("when");
					this.OnwhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(MAX)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_time]", Storage="__time", DbType="DateTime")]
		public System.Nullable<System.DateTime> _time
		{
			get
			{
				return this.@__time;
			}
			set
			{
				if ((this.@__time != value))
				{
					this.On_timeChanging(value);
					this.SendPropertyChanging();
					this.@__time = value;
					this.SendPropertyChanged("_time");
					this.On_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_memo]", Storage="__memo", DbType="NVarChar(MAX)")]
		public string _memo
		{
			get
			{
				return this.@__memo;
			}
			set
			{
				if ((this.@__memo != value))
				{
					this.On_memoChanging(value);
					this.SendPropertyChanging();
					this.@__memo = value;
					this.SendPropertyChanged("_memo");
					this.On_memoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Journal_Entry", Storage="_Entries", ThisKey="id", OtherKey="journal")]
		public EntitySet<Entry> Entries
		{
			get
			{
				return this._Entries;
			}
			set
			{
				this._Entries.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Entries(Entry entity)
		{
			this.SendPropertyChanging();
			entity.Journal1 = this;
		}
		
		private void detach_Entries(Entry entity)
		{
			this.SendPropertyChanging();
			entity.Journal1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="[nilnul.finance.journal].Entry")]
	public partial class Entry : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _id;
		
		private long _journal;
		
		private string _entity;
		
		private System.Nullable<decimal> _quantity;
		
		private string _currency;
		
		private System.Nullable<System.DateTime> @__time;
		
		private System.Data.Linq.Binary @__stamp;
		
		private string @__note;
		
		private EntityRef<Journal> _Journal1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(long value);
    partial void OnidChanged();
    partial void OnjournalChanging(long value);
    partial void OnjournalChanged();
    partial void OnentityChanging(string value);
    partial void OnentityChanged();
    partial void OnquantityChanging(System.Nullable<decimal> value);
    partial void OnquantityChanged();
    partial void OncurrencyChanging(string value);
    partial void OncurrencyChanged();
    partial void On_timeChanging(System.Nullable<System.DateTime> value);
    partial void On_timeChanged();
    partial void On_stampChanging(System.Data.Linq.Binary value);
    partial void On_stampChanged();
    partial void On_noteChanging(string value);
    partial void On_noteChanged();
    #endregion
		
		public Entry()
		{
			this._Journal1 = default(EntityRef<Journal>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public long id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_journal", DbType="BigInt NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public long journal
		{
			get
			{
				return this._journal;
			}
			set
			{
				if ((this._journal != value))
				{
					if (this._Journal1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnjournalChanging(value);
					this.SendPropertyChanging();
					this._journal = value;
					this.SendPropertyChanged("journal");
					this.OnjournalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_entity", DbType="NVarChar(500)", UpdateCheck=UpdateCheck.Never)]
		public string entity
		{
			get
			{
				return this._entity;
			}
			set
			{
				if ((this._entity != value))
				{
					this.OnentityChanging(value);
					this.SendPropertyChanging();
					this._entity = value;
					this.SendPropertyChanged("entity");
					this.OnentityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantity", DbType="Money", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<decimal> quantity
		{
			get
			{
				return this._quantity;
			}
			set
			{
				if ((this._quantity != value))
				{
					this.OnquantityChanging(value);
					this.SendPropertyChanging();
					this._quantity = value;
					this.SendPropertyChanged("quantity");
					this.OnquantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_currency", DbType="NVarChar(500)", UpdateCheck=UpdateCheck.Never)]
		public string currency
		{
			get
			{
				return this._currency;
			}
			set
			{
				if ((this._currency != value))
				{
					this.OncurrencyChanging(value);
					this.SendPropertyChanging();
					this._currency = value;
					this.SendPropertyChanged("currency");
					this.OncurrencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_time]", Storage="__time", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> _time
		{
			get
			{
				return this.@__time;
			}
			set
			{
				if ((this.@__time != value))
				{
					this.On_timeChanging(value);
					this.SendPropertyChanging();
					this.@__time = value;
					this.SendPropertyChanged("_time");
					this.On_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_stamp]", Storage="__stamp", AutoSync=AutoSync.Always, DbType="rowversion", IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary _stamp
		{
			get
			{
				return this.@__stamp;
			}
			set
			{
				if ((this.@__stamp != value))
				{
					this.On_stampChanging(value);
					this.SendPropertyChanging();
					this.@__stamp = value;
					this.SendPropertyChanged("_stamp");
					this.On_stampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_note]", Storage="__note", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string _note
		{
			get
			{
				return this.@__note;
			}
			set
			{
				if ((this.@__note != value))
				{
					this.On_noteChanging(value);
					this.SendPropertyChanging();
					this.@__note = value;
					this.SendPropertyChanged("_note");
					this.On_noteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Journal_Entry", Storage="_Journal1", ThisKey="journal", OtherKey="id", IsForeignKey=true)]
		public Journal Journal1
		{
			get
			{
				return this._Journal1.Entity;
			}
			set
			{
				Journal previousValue = this._Journal1.Entity;
				if (((previousValue != value) 
							|| (this._Journal1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Journal1.Entity = null;
						previousValue.Entries.Remove(this);
					}
					this._Journal1.Entity = value;
					if ((value != null))
					{
						value.Entries.Add(this);
						this._journal = value.id;
					}
					else
					{
						this._journal = default(long);
					}
					this.SendPropertyChanged("Journal1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="[nilnul.finance.journal.entry].Sum")]
	public partial class Sum
	{
		
		private string _entity;
		
		private string _currency;
		
		private System.Nullable<decimal> _sum1;
		
		private System.Nullable<long> _maxJournal;
		
		private System.Nullable<System.DateTime> _when;
		
		private string _description;
		
		public Sum()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_entity", DbType="NVarChar(500)")]
		public string entity
		{
			get
			{
				return this._entity;
			}
			set
			{
				if ((this._entity != value))
				{
					this._entity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_currency", DbType="NVarChar(500)")]
		public string currency
		{
			get
			{
				return this._currency;
			}
			set
			{
				if ((this._currency != value))
				{
					this._currency = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="sum", Storage="_sum1", DbType="Money")]
		public System.Nullable<decimal> sum1
		{
			get
			{
				return this._sum1;
			}
			set
			{
				if ((this._sum1 != value))
				{
					this._sum1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maxJournal", DbType="BigInt")]
		public System.Nullable<long> maxJournal
		{
			get
			{
				return this._maxJournal;
			}
			set
			{
				if ((this._maxJournal != value))
				{
					this._maxJournal = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[when]", Storage="_when", DbType="DateTime")]
		public System.Nullable<System.DateTime> when
		{
			get
			{
				return this._when;
			}
			set
			{
				if ((this._when != value))
				{
					this._when = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(MAX)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this._description = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
